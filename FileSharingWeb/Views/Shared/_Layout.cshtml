@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<Resources> Localizer
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - FileSharing</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/lib/font-awesome/css/font-awesome.min.css" />
    <link rel="stylesheet" href="~/lib/sweetalert2/dist/sweetalert2.min.css"/>
    <link rel="stylesheet" href="~/lib/select2/dist/css/select2.min.css"/>
    <link rel="stylesheet" href="~/css/site.min.css" />

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="~/lib/sweetalert2/dist/sweetalert2.min.js"></script>
    <script src="~/lib/core.js/client/core.min.js"></script>
    <script src="~/lib/select2/dist/js/select2.full.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
</head>
<body>
    <nav class="navbar navbar-inverse navbar-fixed-top fs-navbar">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand">
                    @Localizer["HELLO"] @ViewBag.FirstName!
                </a>
            </div>
            <div class="navbar-collapse collapse navbar-right">
                <ul class="nav navbar-nav navbar-right text-center">
                    <li>
                        <select class="files-search-select form-group">
                            <option value="0" selected="selected">@Localizer["SEARCH"]</option>
                        </select>
                    </li>
                    <li><a asp-area="" asp-controller="Home" asp-action="Index" asp-route-id=""><i class="fa fa-home" aria-hidden="true"></i> @Localizer["HOME"]</a></li>
                    @*<li><a asp-area="" asp-controller="Account" asp-action="Index"><i class="fa fa-user" aria-hidden="true"></i> @Localizer["ACCOUNT"]</a></li>*@
                    <li><a asp-area="" asp-controller="Groups" asp-action="Index"><i class="fa fa-users" aria-hidden="true"></i> @Localizer["GROUPS"]</a></li>
                    <li><a asp-area="" asp-controller="Home" asp-action="Logout"><i class="fa fa-sign-out" aria-hidden="true"></i> @Localizer["LOGOUT"]</a></li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="nav-side-menu">
        <div class="menu-list">

            <ul id="menu-content" class="menu-content">
                @foreach (var option in (string[])@ViewData["Options"])
                {
                    var parts = option.Split(',');
                    if (parts.Length == 1)
                    {
                        <li>
                            <div id="@parts[0]"></div>
                        </li>
                    }
                    else if (parts.Length == 2)
                    {
                        <li>
                            <a onclick="@parts[0]">@Localizer[parts[1]]</a>
                        </li>

                    }
                    else if (parts.Length == 3)
                    {
                        <li>
                            <a asp-controller="@parts[0]" asp-action="@parts[1]">@Localizer[parts[2]]</a>
                        </li>
                    }
                    else if (parts.Length == 4)
                    {
                        <li>
                            <a asp-controller="@parts[0]" asp-action="@parts[1]" asp-route-id="@parts[2]">@Localizer[parts[3]]</a>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
    <div class="body-content site-content">
        @RenderBody()
    </div>
    <script>
        function DeleteFile(idFile) {
            $.ajax({
                url: '/Home/DeleteFile/' + idFile,
                type: 'DELETE',
                cache: false,
                async: false,
                success: function () {
                    location.reload();
                },
                error: function (message) {
                    ShowErrorMessage('', message.responseText);
                }
            });
        }

        function OpenFileDetails(idFile) {
            var groups = {};
            $.ajax({
                url: '/Groups/GetGroups',
                type: 'GET',
                cache: false,
                async: false,
                success: function (result) {
                    groups = result;
                }
            });
            var file;
            $.ajax({
                url: '/Home/GetFile/' + idFile,
                type: 'GET',
                cache: false,
                async: false,
                success: function (result) {
                    file = result;
                }
            });

            var html = '';
            if (file.isOwn) {
                html += '<input id="filename" class="swal2-input" type="text" value="' + file.filename + '"/>';
            }
            if (file.contentType.indexOf("image") !== -1) {
                html += '<img id="image-viewer" style="max-width: 400px; max-height:400px" src="" /><br/><br/>';
                $.ajax({
                    url: '/Home/GetFileContent/' + idFile,
                    type: 'GET',
                    cache: true,
                    async: true,
                    success: function (result) {
                        $("#image-viewer").attr("src", "data:" + file.contentType + ";base64," + result);
                    }
                });
            }
            html += '<div class="swal2-div-info"><span class="swal2-label-info">@Localizer["SIZE"]:</span> <span class="swal2-text-info">' + file.contentSize + '</span><br/>' +
                '<span class="swal2-label-info">@Localizer["CREATION_DATE"]:</span> <span class="swal2-text-info">' + formatDate(new Date(file.creationDate)) + '</span><br/>' +
                '<span class="swal2-label-info">@Localizer["MODIFICATION_DATE"]:</span> <span class="swal2-text-info">' + formatDate(new Date(file.modificationDate)) + '</span></div><br/>';
            if (file.isOwn) {
                if (file.isPublic) {
                    html += '<input type="checkbox" id="is-public" checked><span> @Localizer["PUBLIC"]</span><br/>';
                } else {
                    html += '<input type="checkbox" id="is-public"><span> @Localizer["PUBLIC"]</span><br/>';
                }
                if (groups != null && groups.length > 0) {
                    html += '<div class="form-group">' +
                        '<label for="id-group" class="col-sm-3 control-label" style="color: #222 !important; top: 28px;">@Localizer["GROUP"]</label>' +
                        '<div class="col-sm-9">' +
                        '<select id="id-group" class="form-control swal2-select">' +
                        '<option value= "0"></option>';
                    for (var i in groups) {
                        if (groups[i].id === file.idGroup) {
                            html += '<option value= "' + groups[i].id + '" selected>' + groups[i].name + '</option>';
                        } else {
                            html += '<option value= "' + groups[i].id + '">' + groups[i].name + '</option>';
                        }
                    }
                    html += '</select>' +
                        '</div>' +
                        '</div>';
                }
            }
            html += '<a href="/Home/DownloadFile/' + file.id + '">@Localizer["DOWNLOAD"]</a>';
            if (file.isOwn) {
                html += ' | <a onclick="DeleteFile(' + file.id + ')">@Localizer["DELETE"]</a>';
            }

            if (file.isOwn) {
                swal({
                    html: html,
                    showCancelButton: true,
                    confirmButtonColor: '#935d8c',
                    confirmButtonText: "@Localizer["CONTINUE"]",
                    cancelButtonText: "@Localizer["CANCEL"]",
                    preConfirm: function () {
                        return new Promise(function (resolve) {
                            resolve([
                                $("#filename").val(),
                                $("#is-public").is(':checked'),
                                $('#id-group').val()
                            ])
                        })
                    }
                }).then(function (result) {
                    $.ajax({
                        url: '/Home/UpdateFile/',
                        type: 'POST',
                        data: { id: idFile, filename: result[0], isPublic: result[1], idGroup: result[2] },
                        async: false,
                        success: function () {
                            location.reload();
                        },
                        error: function (message) {
                            ShowErrorMessage('', message.responseText);
                        }
                    });
                });
            }
            else {
                swal({
                    title: file.filename,
                    html: html,
                    showCloseButton: true,
                    showConfirmButton: false
                });
            }
        }
        $(".files-search-select").select2({
            containerCssClass: "select2-files",
            ajax: {
                url: "/Home/QueryFiles",
                dataType: 'json',
                data: function (params) {
                    return {
                        name: params.term, // search term
                        rowQty: params.rowQty,
                        page: params.page
                    };
                },
                processResults: function (data, params) {
                    // parse the results into the format expected by Select2
                    // since we are using custom formatting functions we do not need to
                    // alter the remote JSON data, except to indicate that infinite
                    // scrolling can be used
                    params.rowQty = 5;
                    params.page = params.page;

                    return {
                        results: data,
                        pagination: {
                            more: (params.page + 1 * 5) < data.total_count
                        }
                    };
                },
                cache: false
            },
            escapeMarkup: function (markup) { return markup; },
            minimumInputLength: 3,
            templateResult: formatFile,
            templateSelection: formatFileSelection
        });

        function formatFile(file) {
            if (file.loading) return file.text;

            var markup = "<div class='clearfix'>" +
                "<div class='text-center'>" + file.filename + "</div>" +
                "</div>";

            return markup;
        }

        function formatFileSelection(file) {
            if (file.id == 0) return file.text;
            OpenFileDetails(file.id);
            $(".files-search-select").val('').change();
            return '@Localizer["SEARCH"]';
        }

        function ShowErrorMessage(title, text) {
            swal(title, text, "warning");
        }
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>
