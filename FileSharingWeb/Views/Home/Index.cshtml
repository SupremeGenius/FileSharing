@model FolderDetailsDto
@using FileSharing.Services.Dtos;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<Resources> Localizer
@{
    ViewData["Title"] = Localizer["HOME"];
    if (Model.Folders == null || Model.Folders.Count == 0)
    {
        ViewData["Options"] = new[]
        {
            "CreateFolder(),CREATE_FOLDER",
            "UploadFile(),UPLOAD_FILE"
        };
    }
    else
    {
        ViewData["Options"] = new[]
        {
            "CreateFolder(),CREATE_FOLDER",
            "UploadFile(),UPLOAD_FILE",
            "DeleteFolder(),DELETE_FOLDER"
        };
    }
}

<div class="link-to-previous-folder">
    @if (ViewBag.LinkFolder != null)
    {
        var link = ((string)ViewBag.LinkFolder).Split(',');
        if (link.Length == 2)
        {
            <a asp-controller="Home" asp-action="Index" asp-route-id="@link[0]">@link[1]</a>
        }
        else
        {
            <a asp-controller="Home" asp-action="Index" asp-route-id="">@link[0]</a>
        }
    }
</div>
<div class="files">
    @foreach (var folder in Model.Folders)
    {
        <div class="file">
            <a asp-controller="Home" asp-action="Index" asp-route-id="@folder.Id">
                <img src="~/images/folder.png" />
                <br />
                @folder.Name
            </a>
        </div>
    }
    @foreach (var file in Model.Files)
    {
        <div class="file">
            <a onclick="OpenFileDetails('@file.Id')">
                <img src="~/images/file.png" />
                <br />
                @file.Filename
            </a>
        </div>
    }
</div>


<script>
    function CreateFolder() {
        swal({
            title: "",
            text: "@Localizer["NEW_FOLDER_NAME"]",
            input: 'text',
            showCancelButton: true,
            confirmButtonColor: '#935d8c',
            confirmButtonText: "@Localizer["CONTINUE"]",
            cancelButtonText: "@Localizer["CANCEL"]"
        }).then(function (folderName) {
            $.ajax({
                url: '/Home/CreateFolder',
                type: 'POST',
                data: { folderName: folderName, folderRoot: '@ViewBag.FolderId' },
                success: function () {
                    location.reload();
                },
                error: function (message) {
                    ShowErrorMessage('', message.responseText);
                }
            });
        });
    }

    function UploadFile() {
        var html = '<input type="checkbox" id="is-public"><span> @Localizer["PUBLIC"]</span><br/>';
        if (groups != null && groups.length > 0) {
            html += '<div class="form-group">' +
                '<label for="id-group" class="col-sm-3 control-label" style="color: #222 !important; top: 28px;">@Localizer["GROUP"]</label>' +
                '<div class="col-sm-9">' +
                '<select id="id-group" class="form-control swal2-select">' +
                '<option value= "0"></option>';
            for (var i in groups) {
                html += '<option value= "' + groups[i].id + '">' + groups[i].name + '</option>';
            }
            html += '</select>' +
                '</div>' +
                '</div>';
        }

        swal.setDefaults({
            showCancelButton: true,
            confirmButtonColor: '#935d8c',
            confirmButtonText: "@Localizer["NEXT"] &rarr;",
            cancelButtonText: "@Localizer["CANCEL"]",
            animation: false,
            progressSteps: ['1', '2']
        });

        var steps = [
            {
                title: '@Localizer["SELECT_FILE"]',
                input: 'file',
                inputValidator: function (result) {
                    return new Promise(function (resolve, reject) {
                        if (result) {
                            resolve()
                        } else {
                            reject('@Localizer["FILE_MUST_BE_SELETED"]')
                        }
                    })
                }
            }, {
                title: '@Localizer["SHARING"]',
                html: html,
                preConfirm: function () {
                    return new Promise(function (resolve) {
                        resolve([
                            $("#is-public").is(':checked'),
                            $('#id-group').val()
                        ])
                    })
                }
            }
        ];

        swal.queue(steps).then(function (result) {
            var formData = new FormData();
            formData.append("FileUpload", result[0]);
            formData.append("IsPublic", result[1][0]);
            formData.append("IdGroup", result[1][1]);

            $.ajax({
                url: '/Home/UploadFile/@ViewBag.FolderId',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function () {
                    location.reload();
                },
                error: function (message) {
                    ShowErrorMessage('', message.responseText);
                }
            });
        }, function () {
            swal.resetDefaults()
        });
    }

    function DeleteFolder() {
        swal({
            title: "@Localizer["ASK_SURE"]",
            text: "@Localizer["DELETE_FOLDER_INFORMATION"]",
            input: 'select',
            inputOptions: {
                '0': '',
                @foreach (var folder in Model.Folders)
                {
                    @:'@folder.Id': '@folder.Name',
                }
            },
            inputPlaceholder: '',
            inputValidator: function (value) {
                return new Promise(function (resolve, reject) {
                    if (value !== '0') {
                        resolve();
                    } else {
                        reject('@Localizer["FOLDER_MUST_BE_SELECTED"]');
                    }
                });
            },
            confirmButtonColor: '#935d8c',
            confirmButtonText: "@Localizer["CONTINUE"]",
            cancelButtonText: "@Localizer["CANCEL"]"
        }).then(function (result) {
            $.ajax({
                url: '/Home/DeleteFolder',
                type: 'DELETE',
                data: { folder: result },
                success: function () {
                    location.reload();
                },
                error: function (message) {
                    ShowErrorMessage('', message.responseText);
                }
            });
        });
    }
</script>