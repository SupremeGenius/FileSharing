@model GroupDetailsExtendedDto
@using FileSharing.Services.Dtos
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<Resources> Localizer
@{
    ViewData["Title"] = Model.Name;
    if (Model.IsAdministrable)
    {
        ViewData["Options"] = new[]
        {
            "ExpelUser(),EXPEL_USER",
            "TransferGroup(),TRANSFER_GROUP",
            "Groups,DeleteGroup," + Model.Id + ",DELETE_GROUP"
        };
    }
    else
    {
        ViewData["Options"] = new[]
        {
            "Groups,LeaveGroup," + Model.Id + ",LEAVE_GROUP"
        };
    }
}
<div class="text-center">
    <h2>@Model.Name</h2>
</div>
<div class="group-files">
    <div class="text-center">
        <h3>@Localizer["FILES"]</h3>
    </div>
    @if (Model.Files.Count == 0)
    {
        <div class="text-center">
            <p>@Localizer["NO_GROUP_FILES"]</p>
        </div>
    }
    else
    {
        @foreach (var file in Model.Files)
        {
            <div class="file">
                <a onclick="OpenFileDetails('@file.Id')">
                    <img src="~/images/file.png" />
                    <br />
                    @file.Filename
                </a>
            </div>
        }
    }
</div>
@if (Model.IsAdministrable)
{
    <div class="group-requests">
        <table class="table">
            <thead>
                <tr>
                    <th></th>
                    <th>@Localizer["REQUESTS"].Value.ToUpper()</th>
                    <th></th>
                </tr>
                <tr>
                    <th>@Localizer["LOGIN"].Value.ToUpper()</th>
                    <th>@Localizer["NAME"].Value.ToUpper()</th>
                    <th>@Localizer["OPTIONS"].Value.ToUpper()</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var request in Model.Requests)
                {
                    <tr>
                        <td>@request.Login</td>
                        <td>@request.FirstName @request.LastName</td>
                        <td>@Html.ActionLink(Localizer["ACCEPT"].Value, "AcceptRequest", "Groups", new { idUser = request.Id, idGroup = Model.Id }) | @Html.ActionLink(Localizer["REJECT"].Value, "RejectRequest", "Groups", new { idUser = request.Id, idGroup = Model.Id })</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
<div style="clear:both"></div>

<script>
    function OpenFileDetails(idFile) {
        var file;
        $.ajax({
            url: '/Home/GetFile/' + idFile,
            type: 'GET',
            cache: false,
            async: false,
            success: function (result) {
                file = result;
            }
        });

        var html = '';
        if (file.contentType.indexOf("image") !== -1) {
            html += '<img id="image-viewer" style="max-width: 400px;" src="" /><br/><br/>';
            $.ajax({
                url: '/Home/GetFileContent/' + idFile,
                type: 'GET',
                cache: true,
                async: true,
                success: function (result) {
                    $("#image-viewer").attr("src", "data:" + file.contentType + ";base64," + result);
                }
            });
        }

        html += '<div class="swal2-div-info"><span class="swal2-label-info">@Localizer["SIZE"]:</span> <span class="swal2-text-info">' + file.contentSize + 'KB</span><br/>' +
            '<span class="swal2-label-info">@Localizer["CREATION_DATE"]:</span> <span class="swal2-text-info">' + formatDate(new Date(file.creationDate)) + '</span><br/>' +
            '<span class="swal2-label-info">@Localizer["MODIFICATION_DATE"]:</span> <span class="swal2-text-info">' + formatDate(new Date(file.modificationDate)) + '</span></div><br/>';

        html += '<a href="/Home/DownloadFile/' + file.id + '">@Localizer["DOWNLOAD"]</a>'

        swal({
            title: file.filename,
            html: html,
            showCloseButton: true,
            showConfirmButton: false
        });
    }
</script>